<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>edu.toronto.se</groupId>
	<artifactId>cslicer</artifactId>
	<version>1.0.0</version>
	<name>CSlicer</name>
	<inceptionYear>2014</inceptionYear>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm z</maven.build.timestamp.format>
		<build.timestamp>${maven.build.timestamp}</build.timestamp>
		<junit.jar.path>${junit:junit:jar}</junit.jar.path>
	</properties>

	<developers>
		<developer>
			<id>liyi</id>
			<name>Yi Li</name>
			<organization>Department of Computer Science, University of Toronto</organization>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/</url>
		</license>
	</licenses>

	<repositories>
		<!-- project repository in /cslicer-deps/lib -->
		<repository>
			<id>lib</id>
			<name>lib</name>
			<releases>
				<enabled>true</enabled>
				<checksumPolicy>ignore</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>file:${project.basedir}/cslicer-deps/lib</url>
		</repository>
	</repositories>

	<build>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>

		<plugins>
			<!-- generate and update license -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.8</version>
				<configuration>
					<verbose>false</verbose>
				</configuration>
				<executions>
					<execution>
						<id>first</id>
						<goals>
							<goal>update-project-license</goal>
							<goal>update-file-header</goal>
							<goal>add-third-party</goal>
						</goals>
						<phase>process-sources</phase>
						<configuration>
							<licenseName>apache_v2</licenseName>
							<roots>
								<root>src/main/java</root>
								<root>src/test/java</root>
							</roots>
							<excludes>
								<exclude>**/PathModel.java</exclude>
								<exclude>cslicer/utils/graph/*.java</exclude>
								<exclude>cslicer/utils/CompilationUtils.java</exclude>
								<exclude>cslicer/jgit/hunk/*.java</exclude>
								<exclude>cslicer/coverage/ASTCoverageBuilder.java</exclude>
								<exclude>cslicer/distiller/GitRef*.java</exclude>
								<exclude>cslicer/callgraph/*Visitor.java</exclude>
							</excludes>
							<extraExtensions>
								<myProprietaryExtension>java</myProprietaryExtension>
							</extraExtensions>
							<descriptionTemplate>${basedir}/src/license/template.ftl</descriptionTemplate>
							<canUpdateDescription>false</canUpdateDescription>
							<canUpdateCopyright>true</canUpdateCopyright>
							<useMissingFile>true</useMissingFile>
							<licenseMerges>
								<licenseMerge>Apache License, Version 2.0|Apache 2</licenseMerge>
								<licenseMerge>Apache License, Version 2.0|The Apache Software
									License, Version 2.0</licenseMerge>
								<licenseMerge>Eclipse Distribution License (New BSD License)|New
									BSD License</licenseMerge>
								<licenseMerge>Eclipse Public License v1.0|Eclipse Public License
									1.0</licenseMerge>
							</licenseMerges>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- check style -->
			<!--plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-checkstyle-plugin</artifactId> 
				<version>2.13</version> <executions> <execution> <id>verify-style</id> <phase>process-classes</phase> 
				<goals> <goal>check</goal> </goals> </execution> </executions> </plugin -->


			<!-- compilation -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>cslicer.analyzer.Main</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- Create jar with sources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Create jar with Javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Embedd dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>cslicer.analyzer.Main</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-my-jar-with-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Copy dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>set-properties</id>
						<goals>
							<goal>properties</goal>
						</goals>
					</execution>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<id>create-noncanonicalrev</id>
						<goals>
							<goal>create-timestamp</goal>
						</goals>
						<configuration>
							<timestampFormat>'NON-CANONICAL_'yyyy-MM-dd'T'HH:mm:ss_'${user.name}'</timestampFormat>
							<timestampPropertyName>nonCanonicalRevision</timestampPropertyName>
						</configuration>
					</execution>
					<execution>
						<id>create-buildnumber</id>
						<goals>
							<goal>create</goal>
						</goals>
						<configuration>
							<!--shortRevisionLength>8</shortRevisionLength -->
							<doCheck>false</doCheck>
							<doUpdate>false</doUpdate>
							<revisionOnScmFailure>${nonCanonicalRevision}</revisionOnScmFailure>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											license-maven-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>
												update-project-license
											</goal>
											<goal>add-third-party</goal>
											<goal>
												update-file-header
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											buildnumber-maven-plugin
										</artifactId>
										<versionRange>
											[1.3,)
										</versionRange>
										<goals>
											<goal>
												create-timestamp
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-checkstyle-plugin
										</artifactId>
										<versionRange>
											[2.13,)
										</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.10,)
										</versionRange>
										<goals>
											<goal>properties</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<organization>
		<name>Department of Computer Science, University of Toronto</name>
		<url>http://web.cs.toronto.edu</url>
	</organization>
	<dependencies>
		<dependency>
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit</artifactId>
			<version>4.2.0.201601211800-r</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.mylyn.github</groupId>
			<artifactId>org.eclipse.egit.github.core</artifactId>
			<version>2.1.5</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>ch.uzh.ifi.seal</groupId>
			<artifactId>changedistiller</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.shared</groupId>
			<artifactId>maven-invoker</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>plexus-utils</artifactId>
					<groupId>org.codehaus.plexus</groupId>
				</exclusion>
			</exclusions>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-model</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>plexus-utils</artifactId>
					<groupId>org.codehaus.plexus</groupId>
				</exclusion>
			</exclusions>
			<version>3.3.9</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-utils</artifactId>
			<version>3.0.22</version>
		</dependency>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>org.jacoco.report</artifactId>
			<version>0.7.3.201502191951</version>
			<exclusions>
				<exclusion>
					<artifactId>asm-debug-all</artifactId>
					<groupId>org.ow2.asm</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.bcel</groupId>
			<artifactId>bcel</artifactId>
			<version>5.2</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>soot</groupId>
			<artifactId>soot</artifactId>
			<version>2.5.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.1</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>19.0</version>
		</dependency>
		<dependency>
			<groupId>daikon</groupId>
			<artifactId>daikon</artifactId>
			<version>5.2.26</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20160810</version>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>ch.uzh.ifi.seal</groupId>
				<artifactId>changedistiller</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<url>https://bitbucket.org/liyistc/gitslice</url>
	<description>CSlicer is a semantic slicing tool for Git reposiotries under active development by the Software Engineering group at the University of Toronto. The goal of semantic slicing is to identify a subset of change sets (commits) that implementing a software functionality (e.g., feature, enhancement, or bug fix). The applications include functionality migration, branch refactoring, etc. CSlicer currently works only for Java repositories.</description>
	<scm>
		<url>https://bitbucket.org/liyistc/gitslice</url>
		<connection>scm:git:https://bitbucket.org/liyistc/gitslice.git</connection>
		<tag>HEAD</tag>
		<developerConnection>scm:git:https://bitbucket.org/liyistc/gitslice.git</developerConnection>
	</scm>
	<issueManagement>
		<url>https://bitbucket.org/liyistc/gitslice/issues/</url>
		<system>Bitbucket</system>
	</issueManagement>
</project>
